{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Start Jeopardy Dev Server",
        "type": "shell",
        "command": "npm run dev",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "isBackground": true,
        "problemMatcher": []
      },
      {
        "label": "Start Jeopardy Proxy",
        "type": "shell",
        "command": "npm run proxy",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "isBackground": true,
        "problemMatcher": []
      },
      {
        "label": "Start Jeopardy proxy + dev",
        "dependsOn": [
          "Start Jeopardy Dev Server",
          "Start Jeopardy Proxy"
        ],
        "dependsOrder": "parallel"
      },
      {
        "label": "Start Browser Tools Server",
        "type": "shell",
        "command": "npx @agentdeskai/browser-tools-server@1.2.1",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "isBackground": true,
        "problemMatcher": []
      },
      {
        "label": "Install React Type Definitions",
        "type": "shell",
        "command": "npm install --save-dev @types/react @types/react-dom",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "problemMatcher": []
      },
      {
        "label": "Push Code to GitHub",
        "type": "shell",
        "command": "powershell -Command \"git add .; if ('${input:commitMessage}' -eq '') { git commit -m 'Auto-commit from VSCode task' } else { git commit -m '${input:commitMessage}' }; git push\"",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests (Chrome)",
        "type": "shell",
        "command": "npm run test:e2e:chrome",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": {
          "kind": "test",
          "isDefault": true
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests (Chrome - Headed)",
        "type": "shell",
        "command": "npm run test:e2e:chrome:headed",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests (Chrome - Debug)",
        "type": "shell",
        "command": "npm run test:e2e:chrome:debug",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests (All)",
        "type": "shell",
        "command": "npm run test:e2e",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests (UI Mode)",
        "type": "shell",
        "command": "npm run test:e2e:ui",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Run Specific Test File",
        "type": "shell",
        "command": "npx playwright test ${input:testFile} --project=chromium",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Install Playwright Browsers",
        "type": "shell",
        "command": "npx playwright install chromium",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Show Playwright Report",
        "type": "shell",
        "command": "npx playwright show-report",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "localtunnel 5173",
        "type": "shell",
        "command": "lt --port 5173",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "isBackground": true,
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      }
    ],
    "inputs": [
      {
        "id": "testFile",
        "description": "Enter test file name (e.g., homepage.spec.ts)",
        "default": "homepage.spec.ts",
        "type": "promptString"
      },
      {
        "id": "commitMessage",
        "description": "Enter commit message (leave empty for auto-commit)",
        "default": "",
        "type": "promptString"
      }
    ]
  }