import React from 'react';

type GameType = {
  id: string;
  name: string;
  description: string;
  icon: string;
  color: string;
};

type Props = {
  onSelectGameType: (type: string) => void;
};

export function GameTypeSelector({ onSelectGameType }: Props) {
  const gameTypes: GameType[] = [
    {
      id: 'classic',
      name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞',
      description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ Jeopardy —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—á–∫–æ–≤ –∏ –∂–∏–∑–Ω–µ–π',
      icon: 'üéØ',
      color: 'blue'
    },
    {
      id: 'time-attack',
      name: '–ò–≥—Ä–∞ –Ω–∞ –≤—Ä–µ–º—è',
      description: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç—ã, –±—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è',
      icon: '‚è∞',
      color: 'orange'
    },
    {
      id: 'survival',
      name: '–†–µ–∂–∏–º –≤—ã–∂–∏–≤–∞–Ω–∏—è',
      description: '–û–¥–Ω–∞ –∂–∏–∑–Ω—å, –±–µ–∑ –ø—Ä–∞–≤–∞ –Ω–∞ –æ—à–∏–±–∫—É - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å',
      icon: 'üíÄ',
      color: 'red'
    },
    {
      id: 'team',
      name: '–ö–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞',
      description: '–ò–≥—Ä–∞ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö —Å –æ–±—â–∏–º —Å—á–µ—Ç–æ–º –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π',
      icon: 'üë•',
      color: 'green'
    },
    {
      id: 'automata',
      name: '–ê–≤—Ç–æ–º–∞—Ç—ã',
      description: '–†–µ–∂–∏–º –∏–≥—Ä—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∞–º–∏, –ø–∏—Å—Ç–æ–ª–µ—Ç–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø–∏—Å—Ç–æ–ª–µ—Ç–∞–º–∏',
      icon: 'ü§ñ',
      color: 'purple'
    }
  ];

  const getColorClasses = (color: string) => {
    const colorMap = {
      blue: 'border-blue-200 hover:border-blue-400 hover:bg-blue-50 text-blue-800',
      orange: 'border-orange-200 hover:border-orange-400 hover:bg-orange-50 text-orange-800',
      red: 'border-red-200 hover:border-red-400 hover:bg-red-50 text-red-800',
      green: 'border-green-200 hover:border-green-400 hover:bg-green-50 text-green-800',
      purple: 'border-purple-200 hover:border-purple-400 hover:bg-purple-50 text-purple-800'
    };
    return colorMap[color as keyof typeof colorMap] || colorMap.blue;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-100 via-purple-50 to-pink-100 flex flex-col justify-center items-center p-4">
      <div className="w-full max-w-4xl bg-white rounded-2xl shadow-2xl p-8">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-2">üéÆ Jeopardy!</h1>
          <p className="text-xl text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã –¥–ª—è –Ω–∞—á–∞–ª–∞</p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {gameTypes.map((type) => (
            <button
              key={type.id}
              onClick={() => onSelectGameType(type.id)}
              className={`p-6 border-2 rounded-xl hover:scale-105 transition-all duration-300 text-left group ${getColorClasses(type.color)}`}
            >
              <div className="flex items-start space-x-4">
                <div className="text-4xl group-hover:scale-110 transition-transform duration-300">
                  {type.icon}
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-bold mb-2">{type.name}</h3>
                  <p className="text-gray-600 leading-relaxed">{type.description}</p>
                </div>
              </div>
            </button>
          ))}
        </div>
        
        <div className="mt-8 text-center">
          <p className="text-sm text-gray-500">
            üí° –°–æ–≤–µ—Ç: –ù–∞—á–Ω–∏—Ç–µ —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∏–≥—Ä—ã, —á—Ç–æ–±—ã –æ—Å–≤–æ–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
          </p>
        </div>
      </div>
    </div>
  );
} 